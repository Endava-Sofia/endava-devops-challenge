{

	"AWSTemplateFormatVersion" : "2010-09-09",
	"Description" : "This AWS Cloudformation template will deploy an EC2 Launch configuration with PHP and Apache, Autoscaling group with 1 intance, Load Balancer, and a MySQL RDS database to which we will create a connection.\nAs a prerequisite you need to have a KeyPair already created and a default VPC\n The template would only work in the default VPC.",

	"Parameters" : {
			
		"KeyName": {
			"Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
			"Type": "AWS::EC2::KeyPair::KeyName",
			"ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
		},    
		"DBUser": {
			"NoEcho": "true",
			"Description" : "Username for MySQL database access",
			"Type": "String",
			"MinLength": "1",
			"MaxLength": "16",
			"AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
			"ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
		},
		
		"DBPassword": {
			"NoEcho": "true",
			"Description" : "Password for MySQL database access",
			"Type": "String",
			"MinLength": "1",
			"MaxLength": "41",
			"AllowedPattern" : "[a-zA-Z0-9]*",
			"ConstraintDescription" : "must contain only alphanumeric characters."
		},
		
		"InstanceType" : {
			"Description" : "WebServer EC2 instance type",
			"Type" : "String",
			"Default" : "t2.micro",
			"AllowedValues" : [ "t1.micro", "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "g2.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"],
		
			"ConstraintDescription" : "must be a valid EC2 instance type."
		},
		
		"SSHLocation" : {
		"Description" : " The IP address range that can be used to SSH to the EC2 instances",
		"Type": "String",
		"MinLength": "9",
		"MaxLength": "18",
		"Default": "0.0.0.0/0",
		"AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
		"ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
		}, 
		"DBInstanceClass" : {
			"Description" : "DB Instance size",
			"Type" : "String",
			"Default" : "db.t2.micro",
			"AllowedValues" : ["db.t2.micro","db.t2.small","db.t2.medium" ]
		
		},
		"DefaultVPC" : {
			"Description" : "Select the default VPC of the region",
			"Type" : "AWS::EC2::VPC::Id"
		},
		"DefaultVPCSubnets" : {
			"Description" : "Select the subnets belonging to default VPC",
			"Type":"List<AWS::EC2::Subnet::Id>"
		
		}
	},
	
	"Mappings" : {
		"AWSInstanceType2Arch" : {
			"t1.micro"    : { "Arch" : "HVM64"  },
			"t2.nano"     : { "Arch" : "HVM64"  },
			"t2.micro"    : { "Arch" : "HVM64"  },
			"t2.small"    : { "Arch" : "HVM64"  },
			"t2.medium"   : { "Arch" : "HVM64"  },
			"t2.large"    : { "Arch" : "HVM64"  },
			"m1.small"    : { "Arch" : "HVM64"  },
			"m1.medium"   : { "Arch" : "HVM64"  },
			"m1.large"    : { "Arch" : "HVM64"  },
			"m1.xlarge"   : { "Arch" : "HVM64"  },
			"m2.xlarge"   : { "Arch" : "HVM64"  },
			"m2.2xlarge"  : { "Arch" : "HVM64"  },
			"m2.4xlarge"  : { "Arch" : "HVM64"  },
			"m3.medium"   : { "Arch" : "HVM64"  },
			"m3.large"    : { "Arch" : "HVM64"  },
			"m3.xlarge"   : { "Arch" : "HVM64"  },
			"m3.2xlarge"  : { "Arch" : "HVM64"  },
			"m4.large"    : { "Arch" : "HVM64"  },
			"m4.xlarge"   : { "Arch" : "HVM64"  },
			"m4.2xlarge"  : { "Arch" : "HVM64"  },
			"m4.4xlarge"  : { "Arch" : "HVM64"  },
			"m4.10xlarge" : { "Arch" : "HVM64"  },
			"c1.medium"   : { "Arch" : "HVM64"  },
			"c1.xlarge"   : { "Arch" : "HVM64"  },
			"c3.large"    : { "Arch" : "HVM64"  },
			"c3.xlarge"   : { "Arch" : "HVM64"  },
			"c3.2xlarge"  : { "Arch" : "HVM64"  },
			"c3.4xlarge"  : { "Arch" : "HVM64"  },
			"c3.8xlarge"  : { "Arch" : "HVM64"  },
			"c4.large"    : { "Arch" : "HVM64"  },
			"c4.xlarge"   : { "Arch" : "HVM64"  },
			"c4.2xlarge"  : { "Arch" : "HVM64"  },
			"c4.4xlarge"  : { "Arch" : "HVM64"  },
			"c4.8xlarge"  : { "Arch" : "HVM64"  },
			"g2.2xlarge"  : { "Arch" : "HVMG2"  },
			"g2.8xlarge"  : { "Arch" : "HVMG2"  },
			"r3.large"    : { "Arch" : "HVM64"  },
			"r3.xlarge"   : { "Arch" : "HVM64"  },
			"r3.2xlarge"  : { "Arch" : "HVM64"  },
			"r3.4xlarge"  : { "Arch" : "HVM64"  },
			"r3.8xlarge"  : { "Arch" : "HVM64"  },
			"i2.xlarge"   : { "Arch" : "HVM64"  },
			"i2.2xlarge"  : { "Arch" : "HVM64"  },
			"i2.4xlarge"  : { "Arch" : "HVM64"  },
			"i2.8xlarge"  : { "Arch" : "HVM64"  },
			"d2.xlarge"   : { "Arch" : "HVM64"  },
			"d2.2xlarge"  : { "Arch" : "HVM64"  },
			"d2.4xlarge"  : { "Arch" : "HVM64"  },
			"d2.8xlarge"  : { "Arch" : "HVM64"  },
			"hi1.4xlarge" : { "Arch" : "HVM64"  },
			"hs1.8xlarge" : { "Arch" : "HVM64"  },
			"cr1.8xlarge" : { "Arch" : "HVM64"  },
			"cc2.8xlarge" : { "Arch" : "HVM64"  }
		},
		
		"AWSInstanceType2NATArch" : {
			"t1.micro"    : { "Arch" : "NATHVM64"  },
			"t2.nano"     : { "Arch" : "NATHVM64"  },
			"t2.micro"    : { "Arch" : "NATHVM64"  },
			"t2.small"    : { "Arch" : "NATHVM64"  },
			"t2.medium"   : { "Arch" : "NATHVM64"  },
			"t2.large"    : { "Arch" : "NATHVM64"  },
			"m1.small"    : { "Arch" : "NATHVM64"  },
			"m1.medium"   : { "Arch" : "NATHVM64"  },
			"m1.large"    : { "Arch" : "NATHVM64"  },
			"m1.xlarge"   : { "Arch" : "NATHVM64"  },
			"m2.xlarge"   : { "Arch" : "NATHVM64"  },
			"m2.2xlarge"  : { "Arch" : "NATHVM64"  },
			"m2.4xlarge"  : { "Arch" : "NATHVM64"  },
			"m3.medium"   : { "Arch" : "NATHVM64"  },
			"m3.large"    : { "Arch" : "NATHVM64"  },
			"m3.xlarge"   : { "Arch" : "NATHVM64"  },
			"m3.2xlarge"  : { "Arch" : "NATHVM64"  },
			"m4.large"    : { "Arch" : "NATHVM64"  },
			"m4.xlarge"   : { "Arch" : "NATHVM64"  },
			"m4.2xlarge"  : { "Arch" : "NATHVM64"  },
			"m4.4xlarge"  : { "Arch" : "NATHVM64"  },
			"m4.10xlarge" : { "Arch" : "NATHVM64"  },
			"c1.medium"   : { "Arch" : "NATHVM64"  },
			"c1.xlarge"   : { "Arch" : "NATHVM64"  },
			"c3.large"    : { "Arch" : "NATHVM64"  },
			"c3.xlarge"   : { "Arch" : "NATHVM64"  },
			"c3.2xlarge"  : { "Arch" : "NATHVM64"  },
			"c3.4xlarge"  : { "Arch" : "NATHVM64"  },
			"c3.8xlarge"  : { "Arch" : "NATHVM64"  },
			"c4.large"    : { "Arch" : "NATHVM64"  },
			"c4.xlarge"   : { "Arch" : "NATHVM64"  },
			"c4.2xlarge"  : { "Arch" : "NATHVM64"  },
			"c4.4xlarge"  : { "Arch" : "NATHVM64"  },
			"c4.8xlarge"  : { "Arch" : "NATHVM64"  },
			"g2.2xlarge"  : { "Arch" : "NATHVMG2"  },
			"g2.8xlarge"  : { "Arch" : "NATHVMG2"  },
			"r3.large"    : { "Arch" : "NATHVM64"  },
			"r3.xlarge"   : { "Arch" : "NATHVM64"  },
			"r3.2xlarge"  : { "Arch" : "NATHVM64"  },
			"r3.4xlarge"  : { "Arch" : "NATHVM64"  },
			"r3.8xlarge"  : { "Arch" : "NATHVM64"  },
			"i2.xlarge"   : { "Arch" : "NATHVM64"  },
			"i2.2xlarge"  : { "Arch" : "NATHVM64"  },
			"i2.4xlarge"  : { "Arch" : "NATHVM64"  },
			"i2.8xlarge"  : { "Arch" : "NATHVM64"  },
			"d2.xlarge"   : { "Arch" : "NATHVM64"  },
			"d2.2xlarge"  : { "Arch" : "NATHVM64"  },
			"d2.4xlarge"  : { "Arch" : "NATHVM64"  },
			"d2.8xlarge"  : { "Arch" : "NATHVM64"  },
			"hi1.4xlarge" : { "Arch" : "NATHVM64"  },
			"hs1.8xlarge" : { "Arch" : "NATHVM64"  },
			"cr1.8xlarge" : { "Arch" : "NATHVM64"  },
			"cc2.8xlarge" : { "Arch" : "NATHVM64"  }
		},
		
		"AWSRegionArch2AMI" : {
		"us-east-1"        : {"HVM64" : "ami-0080e4c5bc078760e", "HVMG2" : "ami-0aeb704d503081ea6"},
		"us-west-2"        : {"HVM64" : "ami-01e24be29428c15b2", "HVMG2" : "ami-0fe84a5b4563d8f27"},
		"us-west-1"        : {"HVM64" : "ami-0ec6517f6edbf8044", "HVMG2" : "ami-0a7fc72dc0e51aa77"},
		"eu-west-1"        : {"HVM64" : "ami-08935252a36e25f85", "HVMG2" : "ami-0d5299b1c6112c3c7"},
		"eu-west-2"        : {"HVM64" : "ami-01419b804382064e4", "HVMG2" : "NOT_SUPPORTED"},
		"eu-west-3"        : {"HVM64" : "ami-0dd7e7ed60da8fb83", "HVMG2" : "NOT_SUPPORTED"},
		"eu-central-1"     : {"HVM64" : "ami-0cfbf4f6db41068ac", "HVMG2" : "ami-0aa1822e3eb913a11"},
		"eu-north-1"       : {"HVM64" : "ami-86fe70f8", "HVMG2" : "ami-32d55b4c"},
		"ap-northeast-1"   : {"HVM64" : "ami-00a5245b4816c38e6", "HVMG2" : "ami-09d0e0e099ecabba2"},
		"ap-northeast-2"   : {"HVM64" : "ami-00dc207f8ba6dc919", "HVMG2" : "NOT_SUPPORTED"},
		"ap-northeast-3"   : {"HVM64" : "ami-0b65f69a5c11f3522", "HVMG2" : "NOT_SUPPORTED"},
		"ap-southeast-1"   : {"HVM64" : "ami-05b3bcf7f311194b3", "HVMG2" : "ami-0e46ce0d6a87dc979"},
		"ap-southeast-2"   : {"HVM64" : "ami-02fd0b06f06d93dfc", "HVMG2" : "ami-0c0ab057a101d8ff2"},
		"ap-south-1"       : {"HVM64" : "ami-0ad42f4f66f6c1cc9", "HVMG2" : "ami-0244c1d42815af84a"},
		"us-east-2"        : {"HVM64" : "ami-0cd3dfa4e37921605", "HVMG2" : "NOT_SUPPORTED"},
		"ca-central-1"     : {"HVM64" : "ami-07423fb63ea0a0930", "HVMG2" : "NOT_SUPPORTED"},
		"sa-east-1"        : {"HVM64" : "ami-05145e0b28ad8e0b2", "HVMG2" : "NOT_SUPPORTED"},
		"cn-north-1"       : {"HVM64" : "ami-053617c9d818c1189", "HVMG2" : "NOT_SUPPORTED"},
		"cn-northwest-1"   : {"HVM64" : "ami-0f7937761741dc640", "HVMG2" : "NOT_SUPPORTED"}
	}
	
	},
	
	"Resources" : {
	
		"WebServerLaunchConfig" : {
			"Type": "AWS::AutoScaling::LaunchConfiguration",
			"Metadata" : {
				"AWS::CloudFormation::Init" : {
					"configSets" : {
						"InstallAndRun" : ["Install"]
					},
			
					"Install" : {
						"packages" : {
							"yum" : {
								"httpd"        : [],
								"php"          : [],
								"php-mysql"    : []
							}
						},
			
						"files" : {
							"/var/www/html/index.php" : {
								"content" : { "Fn::Join" : [ "", [
								"<html>\n",
								"  <head>\n",
								"    <title>AWS CloudFormation PHP Sample</title>\n",
								"    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\n",
								"  </head>\n",
								"  <body>\n",
								"    <h1>Welcome to the AWS CloudFormation PHP Sample</h1>\n",
								"    <p/>\n",
								"    <?php\n",
								"      // Print out the current data and time\n",
								"      print \"The Current Date and Time is: <br/>\";\n",
								"      print date(\"g:i A l, F j Y.\");\n",
								"    ?>\n",
								"    <p/>\n",
								"    <?php\n",
								"      // Setup a handle for CURL\n",
								"      $curl_handle=curl_init();\n",
								"      curl_setopt($curl_handle,CURLOPT_CONNECTTIMEOUT,2);\n",
								"      curl_setopt($curl_handle,CURLOPT_RETURNTRANSFER,1);\n",
								"      // Get the hostname of the intance from the instance metadata\n",
								"      curl_setopt($curl_handle,CURLOPT_URL,'http://169.254.169.254/latest/meta-data/public-hostname');\n",
								"      $hostname = curl_exec($curl_handle);\n",
								"      if (empty($hostname))\n",
								"      {\n",
								"        print \"Sorry, for some reason, we got no hostname back <br />\";\n",
								"      }\n",
								"      else\n",
								"      {\n",
								"        print \"Server = \" . $hostname . \"<br />\";\n",
								"      }\n",
								"      // Get the instance-id of the intance from the instance metadata\n",
								"      curl_setopt($curl_handle,CURLOPT_URL,'http://169.254.169.254/latest/meta-data/instance-id');\n",
								"      $instanceid = curl_exec($curl_handle);\n",
								"      if (empty($instanceid))\n",
								"      {\n",
								"        print \"Sorry, for some reason, we got no instance id back <br />\";\n",
								"      }\n",
								"      else\n",
								"      {\n",
								"        print \"EC2 instance-id = \" . $instanceid . \"<br />\";\n",
								"      }\n",
								"      $Database   = \"", { "Fn::GetAtt" : [ "MySQL", "Endpoint.Address" ] }, "\";\n",
								"      $DBUser     = \"", {"Ref" : "DBUser"}, "\";\n",
								"      $DBPassword = \"", {"Ref" : "DBPassword"}, "\";\n",
								"      print \"Database = \" . $Database . \"<br />\";\n",
								"      $dbconnection = mysql_connect($Database, $DBUser, $DBPassword)\n",
								"                      or die(\"Could not connect: \" . mysql_error());\n",
								"      print (\"Connected to $Database successfully\");\n",
								"      mysql_close($dbconnection);\n",
								"    ?>\n",
								"    <h2>PHP Information</h2>\n",
								"    <p/>\n",
								"    <?php\n",
								"      phpinfo();\n",
								"    ?>\n",
								"  </body>\n",
								"</html>\n"
								]]},
								"mode"  : "000600",
								"owner" : "apache",
								"group" : "apache"
							},
				
							"/etc/cfn/cfn-hup.conf" : {
								"content" : { "Fn::Join" : ["", [
								"[main]\n",
								"stack=", { "Ref" : "AWS::StackId" }, "\n",
								"region=", { "Ref" : "AWS::Region" }, "\n"
								]]},
								"mode"    : "000400",
								"owner"   : "root",
								"group"   : "root"
							},
				
							"/etc/cfn/hooks.d/cfn-auto-reloader.conf" : {
								"content": { "Fn::Join" : ["", [
								"[cfn-auto-reloader-hook]\n",
								"triggers=post.update\n",
								"path=Resources.WebServerLaunchConfig.Metadata.AWS::CloudFormation::Init\n",
								"action=/opt/aws/bin/cfn-init -v ",
								"         --stack ", { "Ref" : "AWS::StackName" },
								"         --resource WebServerLaunchConfig ",
								"         --configsets InstallAndRun ",
								"         --region ", { "Ref" : "AWS::Region" }, "\n",
								"runas=root\n"
								]]},
								"mode"    : "000400",
								"owner"   : "root",
								"group"   : "root"
							}
						},
			
						"services" : {
						"sysvinit" : {  
							"httpd"   : { "enabled" : "true", "ensureRunning" : "true" },
							"cfn-hup" : { "enabled" : "true", "ensureRunning" : "true",
										"files" : ["/etc/cfn/cfn-hup.conf", "/etc/cfn/hooks.d/cfn-auto-reloader.conf"]}
						}
						}
					}
				}			
				

			},
			"Properties" : {
				"ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
                          { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
				"InstanceMonitoring" : "false",
				"InstanceType" : { "Ref" : "InstanceType" },
				"KeyName" : { "Ref" : "KeyName" },
				"LaunchConfigurationName" : "ApachePHPWebServer",
				"SecurityGroups" : [{"Ref" : "WebAndDBServerSecurityGroup"}],
				"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
					 "#!/bin/bash -xe\n",
					 "yum update -y aws-cfn-bootstrap\n",

					 "# Install the files and packages from the metadata\n",
					 "/opt/aws/bin/cfn-init -v ",
					 "         --stack ", { "Ref" : "AWS::StackName" },
					 "         --resource WebServerLaunchConfig ",
					 "         --configsets InstallAndRun ",
					 "         --region ", { "Ref" : "AWS::Region" }, "\n",

					 "# Signal the status from cfn-init\n",
					 "/opt/aws/bin/cfn-signal -e $? ",
					 "         --stack ", { "Ref" : "AWS::StackName" },
					 "         --resource WebServerAutoScaling ",
					 "         --region ", { "Ref" : "AWS::Region" }, "\n"
				]]}}
			},
			"DependsOn" : ["WebAndDBServerSecurityGroup","MySQL"]
		
		
		
		},
		"WebAndDBServerSecurityGroup" : {
			"Type" : "AWS::EC2::SecurityGroup",
			"Properties" : {
			  "GroupDescription" : "Enable HTTP access via port 80",
			  "SecurityGroupIngress" : [
				{"IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0"},
				{"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref" : "SSHLocation"}}
			  ]
			}      
		},
		"SGBaseIngress": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupName": {
                    "Ref": "WebAndDBServerSecurityGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": 0,
                "ToPort": 65535,
                "SourceSecurityGroupId": 
				{ "Fn::GetAtt" : [ "WebAndDBServerSecurityGroup", "GroupId" ] }
            }
        },


		
		"WebServerAutoScaling" : {
			"Type" : "AWS::AutoScaling::AutoScalingGroup",
				"Properties" : {
					"AutoScalingGroupName" : "WebServerAutoScaling",
					"DesiredCapacity" : "1",
					"HealthCheckGracePeriod" : "60",
					"HealthCheckType" : "ELB",
					"LaunchConfigurationName" : "ApachePHPWebServer",
					"MaxSize" : "2",
					"MinSize" : "1",
					"AvailabilityZones":{
					"Fn::GetAZs":{ "Ref":"AWS::Region"}
					},
					"TargetGroupARNs" : [{"Ref" : "DefaultTargetGroup"}]
				},
			"DependsOn" : "WebServerLaunchConfig",
			"CreationPolicy" : {
				"ResourceSignal" : {
					"Timeout" : "PT10M",
					"Count"   : "1"
				}
			}
		},
		
		"MySQL": {
			"Type": "AWS::RDS::DBInstance",
			"Properties": {
				"AllocatedStorage": "100",
				"DBInstanceClass": {"Ref" : "DBInstanceClass"},
				"Engine": "MySQL",
				"EngineVersion": "5.7.22",
				"Iops": "1000",
				"MasterUsername": {
					"Ref": "DBUser"
				},
				"MasterUserPassword": {
					"Ref": "DBPassword"
				},
				"VPCSecurityGroups" :  [{ "Fn::GetAtt" : [ "WebAndDBServerSecurityGroup", "GroupId" ] }]
			}
		},
		
		"LoadBalancer": {
			  "Type" : "AWS::ElasticLoadBalancingV2::LoadBalancer",
			  "Properties" : {    
				"IpAddressType" : "ipv4",
				"Scheme" : "internet-facing",
				"SecurityGroups" : [{ "Fn::GetAtt" : [ "WebAndDBServerSecurityGroup", "GroupId" ] }],
				"Type" : "application",
				"Subnets" : {"Ref" : "DefaultVPCSubnets"}
			  }
		},
		"LoadBalancerListener": {
			"Type": "AWS::ElasticLoadBalancingV2::Listener",
			"Properties": {
				"LoadBalancerArn": {
					"Ref": "LoadBalancer"
				},
				"Port": 80,
				"Protocol": "HTTP",
				"DefaultActions": [
					{
						"Type": "forward",
						"TargetGroupArn": {"Ref": "DefaultTargetGroup"}
					}
				]
			}
		},

        "DefaultTargetGroup": {
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "Properties": {
                "Port": 80,
                "Protocol": "HTTP",
				"TargetType": "instance",
				"TargetGroupAttributes" : [{"Key" : "deregistration_delay.timeout_seconds", "Value" : "100" }],
				"VpcId": {"Ref": "DefaultVPC"}
            }
        }
		
		
	},
	"Outputs" : {
		"LoadBalancerDNSName" : {
			"Description": "The DNSName of the load balancer",  
			"Value" : { "Fn::GetAtt" : [ "LoadBalancer", "DNSName" ]}
		}
	
	}
	
	
	
}